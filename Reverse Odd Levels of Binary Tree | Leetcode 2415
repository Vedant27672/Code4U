class Solution {
public:
    TreeNode* reverseOddLevels(TreeNode* root) {
        vector<vector<int>> values;
        vector<vector<TreeNode*>> tree;

        queue<TreeNode*> q;
        int level = 0;
        q.push(root);

        while (!q.empty()) {
            int s = q.size();
            vector<int> temp;
            vector<TreeNode*> temp2;

            for (int i = 0; i < s; i++) {
                
                TreeNode* node = q.front();
                q.pop();
                temp.push_back(node->val);
                temp2.push_back(node);

                if (node->left) {
                    q.push(node->left);
                }
                if (node->right) {
                    q.push(node->right);
                }
            }

            if(level%2!=0) {
                reverse(temp.begin(), temp.end());
            }
            values.push_back(temp);
            tree.push_back(temp2);
            level++;
        }

        for (int i = 0; i < tree.size(); i++) {
            for (int j = 0; j < tree[i].size(); j++) {
                tree[i][j]->val = values[i][j];
            }
        }

        return root;
    }
};
